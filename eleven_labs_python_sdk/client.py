# coding: utf-8
"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from eleven_labs_python_sdk.client_custom import ClientCustom
from eleven_labs_python_sdk.configuration import Configuration
from eleven_labs_python_sdk.api_client import ApiClient
from eleven_labs_python_sdk.type_util import copy_signature
from eleven_labs_python_sdk.apis.tags.pronunciation_dictionary_api import PronunciationDictionaryApi
from eleven_labs_python_sdk.apis.tags.audio_native_api import AudioNativeApi
from eleven_labs_python_sdk.apis.tags.dubbing_api import DubbingApi
from eleven_labs_python_sdk.apis.tags.models_api import ModelsApi
from eleven_labs_python_sdk.apis.tags.projects_api import ProjectsApi
from eleven_labs_python_sdk.apis.tags.redirect_api import RedirectApi
from eleven_labs_python_sdk.apis.tags.samples_api import SamplesApi
from eleven_labs_python_sdk.apis.tags.speech_history_api import SpeechHistoryApi
from eleven_labs_python_sdk.apis.tags.speech_to_speech_api import SpeechToSpeechApi
from eleven_labs_python_sdk.apis.tags.text_to_speech_api import TextToSpeechApi
from eleven_labs_python_sdk.apis.tags.user_api import UserApi
from eleven_labs_python_sdk.apis.tags.voice_generation_api import VoiceGenerationApi
from eleven_labs_python_sdk.apis.tags.voices_api import VoicesApi
from eleven_labs_python_sdk.apis.tags.workspace_api import WorkspaceApi



class ElevenLabs(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self.pronunciation_dictionary: PronunciationDictionaryApi = PronunciationDictionaryApi(api_client)
        self.audio_native: AudioNativeApi = AudioNativeApi(api_client)
        self.dubbing: DubbingApi = DubbingApi(api_client)
        self.models: ModelsApi = ModelsApi(api_client)
        self.projects: ProjectsApi = ProjectsApi(api_client)
        self.redirect: RedirectApi = RedirectApi(api_client)
        self.samples: SamplesApi = SamplesApi(api_client)
        self.speech_history: SpeechHistoryApi = SpeechHistoryApi(api_client)
        self.speech_to_speech: SpeechToSpeechApi = SpeechToSpeechApi(api_client)
        self.text_to_speech: TextToSpeechApi = TextToSpeechApi(api_client)
        self.user: UserApi = UserApi(api_client)
        self.voice_generation: VoiceGenerationApi = VoiceGenerationApi(api_client)
        self.voices: VoicesApi = VoicesApi(api_client)
        self.workspace: WorkspaceApi = WorkspaceApi(api_client)
