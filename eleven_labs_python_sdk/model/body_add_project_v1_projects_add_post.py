# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from eleven_labs_python_sdk import schemas  # noqa: F401


class BodyAddProjectV1ProjectsAddPost(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "default_paragraph_voice_id",
            "default_title_voice_id",
            "name",
            "default_model_id",
            "pronunciation_dictionary_locators",
        }
        
        class properties:
            name = schemas.StrSchema
            default_title_voice_id = schemas.StrSchema
            default_paragraph_voice_id = schemas.StrSchema
            default_model_id = schemas.StrSchema
        
            @staticmethod
            def pronunciation_dictionary_locators() -> typing.Type['BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators']:
                return BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators
            title = schemas.StrSchema
            from_url = schemas.StrSchema
            from_document = schemas.BinarySchema
            quality_preset = schemas.StrSchema
            author = schemas.StrSchema
            isbn_number = schemas.StrSchema
            acx_volume_normalization = schemas.BoolSchema
            volume_normalization = schemas.BoolSchema
            callback_url = schemas.StrSchema
            __annotations__ = {
                "name": name,
                "default_title_voice_id": default_title_voice_id,
                "default_paragraph_voice_id": default_paragraph_voice_id,
                "default_model_id": default_model_id,
                "pronunciation_dictionary_locators": pronunciation_dictionary_locators,
                "title": title,
                "from_url": from_url,
                "from_document": from_document,
                "quality_preset": quality_preset,
                "author": author,
                "isbn_number": isbn_number,
                "acx_volume_normalization": acx_volume_normalization,
                "volume_normalization": volume_normalization,
                "callback_url": callback_url,
            }
    
    default_paragraph_voice_id: MetaOapg.properties.default_paragraph_voice_id
    default_title_voice_id: MetaOapg.properties.default_title_voice_id
    name: MetaOapg.properties.name
    default_model_id: MetaOapg.properties.default_model_id
    pronunciation_dictionary_locators: 'BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default_title_voice_id"]) -> MetaOapg.properties.default_title_voice_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default_paragraph_voice_id"]) -> MetaOapg.properties.default_paragraph_voice_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default_model_id"]) -> MetaOapg.properties.default_model_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pronunciation_dictionary_locators"]) -> 'BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["from_url"]) -> MetaOapg.properties.from_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["from_document"]) -> MetaOapg.properties.from_document: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["quality_preset"]) -> MetaOapg.properties.quality_preset: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["author"]) -> MetaOapg.properties.author: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isbn_number"]) -> MetaOapg.properties.isbn_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acx_volume_normalization"]) -> MetaOapg.properties.acx_volume_normalization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volume_normalization"]) -> MetaOapg.properties.volume_normalization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["callback_url"]) -> MetaOapg.properties.callback_url: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "default_title_voice_id", "default_paragraph_voice_id", "default_model_id", "pronunciation_dictionary_locators", "title", "from_url", "from_document", "quality_preset", "author", "isbn_number", "acx_volume_normalization", "volume_normalization", "callback_url", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default_title_voice_id"]) -> MetaOapg.properties.default_title_voice_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default_paragraph_voice_id"]) -> MetaOapg.properties.default_paragraph_voice_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default_model_id"]) -> MetaOapg.properties.default_model_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pronunciation_dictionary_locators"]) -> 'BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> typing.Union[MetaOapg.properties.title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["from_url"]) -> typing.Union[MetaOapg.properties.from_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["from_document"]) -> typing.Union[MetaOapg.properties.from_document, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["quality_preset"]) -> typing.Union[MetaOapg.properties.quality_preset, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["author"]) -> typing.Union[MetaOapg.properties.author, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isbn_number"]) -> typing.Union[MetaOapg.properties.isbn_number, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acx_volume_normalization"]) -> typing.Union[MetaOapg.properties.acx_volume_normalization, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volume_normalization"]) -> typing.Union[MetaOapg.properties.volume_normalization, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["callback_url"]) -> typing.Union[MetaOapg.properties.callback_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "default_title_voice_id", "default_paragraph_voice_id", "default_model_id", "pronunciation_dictionary_locators", "title", "from_url", "from_document", "quality_preset", "author", "isbn_number", "acx_volume_normalization", "volume_normalization", "callback_url", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        default_paragraph_voice_id: typing.Union[MetaOapg.properties.default_paragraph_voice_id, str, ],
        default_title_voice_id: typing.Union[MetaOapg.properties.default_title_voice_id, str, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        default_model_id: typing.Union[MetaOapg.properties.default_model_id, str, ],
        pronunciation_dictionary_locators: 'BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators',
        title: typing.Union[MetaOapg.properties.title, str, schemas.Unset] = schemas.unset,
        from_url: typing.Union[MetaOapg.properties.from_url, str, schemas.Unset] = schemas.unset,
        from_document: typing.Union[MetaOapg.properties.from_document, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        quality_preset: typing.Union[MetaOapg.properties.quality_preset, str, schemas.Unset] = schemas.unset,
        author: typing.Union[MetaOapg.properties.author, str, schemas.Unset] = schemas.unset,
        isbn_number: typing.Union[MetaOapg.properties.isbn_number, str, schemas.Unset] = schemas.unset,
        acx_volume_normalization: typing.Union[MetaOapg.properties.acx_volume_normalization, bool, schemas.Unset] = schemas.unset,
        volume_normalization: typing.Union[MetaOapg.properties.volume_normalization, bool, schemas.Unset] = schemas.unset,
        callback_url: typing.Union[MetaOapg.properties.callback_url, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BodyAddProjectV1ProjectsAddPost':
        return super().__new__(
            cls,
            *args,
            default_paragraph_voice_id=default_paragraph_voice_id,
            default_title_voice_id=default_title_voice_id,
            name=name,
            default_model_id=default_model_id,
            pronunciation_dictionary_locators=pronunciation_dictionary_locators,
            title=title,
            from_url=from_url,
            from_document=from_document,
            quality_preset=quality_preset,
            author=author,
            isbn_number=isbn_number,
            acx_volume_normalization=acx_volume_normalization,
            volume_normalization=volume_normalization,
            callback_url=callback_url,
            _configuration=_configuration,
            **kwargs,
        )

from eleven_labs_python_sdk.model.body_add_project_v1_projects_add_post_pronunciation_dictionary_locators import BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators
