# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from eleven_labs_python_sdk import schemas  # noqa: F401


class VoiceSharingResponseModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "featured",
            "financial_rewards_enabled",
            "review_message",
            "twitter_username",
            "description",
            "enabled_in_library",
            "public_owner_id",
            "history_item_sample_id",
            "voice_mixing_allowed",
            "date_unix",
            "rate",
            "cloned_by_count",
            "free_users_allowed",
            "review_status",
            "instagram_username",
            "liked_by_count",
            "live_moderation_enabled",
            "youtube_username",
            "original_voice_id",
            "tiktok_username",
            "disable_at_unix",
            "labels",
            "ban_reason",
            "whitelisted_emails",
            "name",
            "notice_period",
            "status",
        }
        
        class properties:
            description = schemas.StrSchema
            
            
            class status(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "enabled": "ENABLED",
                        "disabled": "DISABLED",
                        "copied": "COPIED",
                        "copied_disabled": "COPIED_DISABLED",
                    }
                
                @schemas.classproperty
                def ENABLED(cls):
                    return cls("enabled")
                
                @schemas.classproperty
                def DISABLED(cls):
                    return cls("disabled")
                
                @schemas.classproperty
                def COPIED(cls):
                    return cls("copied")
                
                @schemas.classproperty
                def COPIED_DISABLED(cls):
                    return cls("copied_disabled")
            history_item_sample_id = schemas.StrSchema
            date_unix = schemas.IntSchema
        
            @staticmethod
            def whitelisted_emails() -> typing.Type['VoiceSharingResponseModelWhitelistedEmails']:
                return VoiceSharingResponseModelWhitelistedEmails
            public_owner_id = schemas.StrSchema
            original_voice_id = schemas.StrSchema
            financial_rewards_enabled = schemas.BoolSchema
            free_users_allowed = schemas.BoolSchema
            live_moderation_enabled = schemas.BoolSchema
            rate = schemas.NumberSchema
            notice_period = schemas.IntSchema
            disable_at_unix = schemas.IntSchema
            voice_mixing_allowed = schemas.BoolSchema
            instagram_username = schemas.StrSchema
            twitter_username = schemas.StrSchema
            youtube_username = schemas.StrSchema
            tiktok_username = schemas.StrSchema
            featured = schemas.BoolSchema
            ban_reason = schemas.StrSchema
            liked_by_count = schemas.IntSchema
            cloned_by_count = schemas.IntSchema
            name = schemas.StrSchema
        
            @staticmethod
            def labels() -> typing.Type['VoiceSharingResponseModelLabels']:
                return VoiceSharingResponseModelLabels
            
            
            class review_status(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "not_requested": "NOT_REQUESTED",
                        "pending": "PENDING",
                        "declined": "DECLINED",
                        "allowed": "ALLOWED",
                        "allowed_with_changes": "ALLOWED_WITH_CHANGES",
                    }
                
                @schemas.classproperty
                def NOT_REQUESTED(cls):
                    return cls("not_requested")
                
                @schemas.classproperty
                def PENDING(cls):
                    return cls("pending")
                
                @schemas.classproperty
                def DECLINED(cls):
                    return cls("declined")
                
                @schemas.classproperty
                def ALLOWED(cls):
                    return cls("allowed")
                
                @schemas.classproperty
                def ALLOWED_WITH_CHANGES(cls):
                    return cls("allowed_with_changes")
            review_message = schemas.StrSchema
            enabled_in_library = schemas.BoolSchema
            __annotations__ = {
                "description": description,
                "status": status,
                "history_item_sample_id": history_item_sample_id,
                "date_unix": date_unix,
                "whitelisted_emails": whitelisted_emails,
                "public_owner_id": public_owner_id,
                "original_voice_id": original_voice_id,
                "financial_rewards_enabled": financial_rewards_enabled,
                "free_users_allowed": free_users_allowed,
                "live_moderation_enabled": live_moderation_enabled,
                "rate": rate,
                "notice_period": notice_period,
                "disable_at_unix": disable_at_unix,
                "voice_mixing_allowed": voice_mixing_allowed,
                "instagram_username": instagram_username,
                "twitter_username": twitter_username,
                "youtube_username": youtube_username,
                "tiktok_username": tiktok_username,
                "featured": featured,
                "ban_reason": ban_reason,
                "liked_by_count": liked_by_count,
                "cloned_by_count": cloned_by_count,
                "name": name,
                "labels": labels,
                "review_status": review_status,
                "review_message": review_message,
                "enabled_in_library": enabled_in_library,
            }
    
    featured: MetaOapg.properties.featured
    financial_rewards_enabled: MetaOapg.properties.financial_rewards_enabled
    review_message: MetaOapg.properties.review_message
    twitter_username: MetaOapg.properties.twitter_username
    description: MetaOapg.properties.description
    enabled_in_library: MetaOapg.properties.enabled_in_library
    public_owner_id: MetaOapg.properties.public_owner_id
    history_item_sample_id: MetaOapg.properties.history_item_sample_id
    voice_mixing_allowed: MetaOapg.properties.voice_mixing_allowed
    date_unix: MetaOapg.properties.date_unix
    rate: MetaOapg.properties.rate
    cloned_by_count: MetaOapg.properties.cloned_by_count
    free_users_allowed: MetaOapg.properties.free_users_allowed
    review_status: MetaOapg.properties.review_status
    instagram_username: MetaOapg.properties.instagram_username
    liked_by_count: MetaOapg.properties.liked_by_count
    live_moderation_enabled: MetaOapg.properties.live_moderation_enabled
    youtube_username: MetaOapg.properties.youtube_username
    original_voice_id: MetaOapg.properties.original_voice_id
    tiktok_username: MetaOapg.properties.tiktok_username
    disable_at_unix: MetaOapg.properties.disable_at_unix
    labels: 'VoiceSharingResponseModelLabels'
    ban_reason: MetaOapg.properties.ban_reason
    whitelisted_emails: 'VoiceSharingResponseModelWhitelistedEmails'
    name: MetaOapg.properties.name
    notice_period: MetaOapg.properties.notice_period
    status: MetaOapg.properties.status
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["history_item_sample_id"]) -> MetaOapg.properties.history_item_sample_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_unix"]) -> MetaOapg.properties.date_unix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["whitelisted_emails"]) -> 'VoiceSharingResponseModelWhitelistedEmails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["public_owner_id"]) -> MetaOapg.properties.public_owner_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["original_voice_id"]) -> MetaOapg.properties.original_voice_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["financial_rewards_enabled"]) -> MetaOapg.properties.financial_rewards_enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["free_users_allowed"]) -> MetaOapg.properties.free_users_allowed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["live_moderation_enabled"]) -> MetaOapg.properties.live_moderation_enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rate"]) -> MetaOapg.properties.rate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notice_period"]) -> MetaOapg.properties.notice_period: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["disable_at_unix"]) -> MetaOapg.properties.disable_at_unix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voice_mixing_allowed"]) -> MetaOapg.properties.voice_mixing_allowed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["instagram_username"]) -> MetaOapg.properties.instagram_username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["twitter_username"]) -> MetaOapg.properties.twitter_username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["youtube_username"]) -> MetaOapg.properties.youtube_username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tiktok_username"]) -> MetaOapg.properties.tiktok_username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["featured"]) -> MetaOapg.properties.featured: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ban_reason"]) -> MetaOapg.properties.ban_reason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["liked_by_count"]) -> MetaOapg.properties.liked_by_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cloned_by_count"]) -> MetaOapg.properties.cloned_by_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["labels"]) -> 'VoiceSharingResponseModelLabels': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["review_status"]) -> MetaOapg.properties.review_status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["review_message"]) -> MetaOapg.properties.review_message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enabled_in_library"]) -> MetaOapg.properties.enabled_in_library: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "status", "history_item_sample_id", "date_unix", "whitelisted_emails", "public_owner_id", "original_voice_id", "financial_rewards_enabled", "free_users_allowed", "live_moderation_enabled", "rate", "notice_period", "disable_at_unix", "voice_mixing_allowed", "instagram_username", "twitter_username", "youtube_username", "tiktok_username", "featured", "ban_reason", "liked_by_count", "cloned_by_count", "name", "labels", "review_status", "review_message", "enabled_in_library", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["history_item_sample_id"]) -> MetaOapg.properties.history_item_sample_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_unix"]) -> MetaOapg.properties.date_unix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["whitelisted_emails"]) -> 'VoiceSharingResponseModelWhitelistedEmails': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["public_owner_id"]) -> MetaOapg.properties.public_owner_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["original_voice_id"]) -> MetaOapg.properties.original_voice_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["financial_rewards_enabled"]) -> MetaOapg.properties.financial_rewards_enabled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["free_users_allowed"]) -> MetaOapg.properties.free_users_allowed: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["live_moderation_enabled"]) -> MetaOapg.properties.live_moderation_enabled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rate"]) -> MetaOapg.properties.rate: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notice_period"]) -> MetaOapg.properties.notice_period: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["disable_at_unix"]) -> MetaOapg.properties.disable_at_unix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voice_mixing_allowed"]) -> MetaOapg.properties.voice_mixing_allowed: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["instagram_username"]) -> MetaOapg.properties.instagram_username: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["twitter_username"]) -> MetaOapg.properties.twitter_username: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["youtube_username"]) -> MetaOapg.properties.youtube_username: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tiktok_username"]) -> MetaOapg.properties.tiktok_username: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["featured"]) -> MetaOapg.properties.featured: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ban_reason"]) -> MetaOapg.properties.ban_reason: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["liked_by_count"]) -> MetaOapg.properties.liked_by_count: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cloned_by_count"]) -> MetaOapg.properties.cloned_by_count: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["labels"]) -> 'VoiceSharingResponseModelLabels': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["review_status"]) -> MetaOapg.properties.review_status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["review_message"]) -> MetaOapg.properties.review_message: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enabled_in_library"]) -> MetaOapg.properties.enabled_in_library: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "status", "history_item_sample_id", "date_unix", "whitelisted_emails", "public_owner_id", "original_voice_id", "financial_rewards_enabled", "free_users_allowed", "live_moderation_enabled", "rate", "notice_period", "disable_at_unix", "voice_mixing_allowed", "instagram_username", "twitter_username", "youtube_username", "tiktok_username", "featured", "ban_reason", "liked_by_count", "cloned_by_count", "name", "labels", "review_status", "review_message", "enabled_in_library", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        featured: typing.Union[MetaOapg.properties.featured, bool, ],
        financial_rewards_enabled: typing.Union[MetaOapg.properties.financial_rewards_enabled, bool, ],
        review_message: typing.Union[MetaOapg.properties.review_message, str, ],
        twitter_username: typing.Union[MetaOapg.properties.twitter_username, str, ],
        description: typing.Union[MetaOapg.properties.description, str, ],
        enabled_in_library: typing.Union[MetaOapg.properties.enabled_in_library, bool, ],
        public_owner_id: typing.Union[MetaOapg.properties.public_owner_id, str, ],
        history_item_sample_id: typing.Union[MetaOapg.properties.history_item_sample_id, str, ],
        voice_mixing_allowed: typing.Union[MetaOapg.properties.voice_mixing_allowed, bool, ],
        date_unix: typing.Union[MetaOapg.properties.date_unix, decimal.Decimal, int, ],
        rate: typing.Union[MetaOapg.properties.rate, decimal.Decimal, int, float, ],
        cloned_by_count: typing.Union[MetaOapg.properties.cloned_by_count, decimal.Decimal, int, ],
        free_users_allowed: typing.Union[MetaOapg.properties.free_users_allowed, bool, ],
        review_status: typing.Union[MetaOapg.properties.review_status, str, ],
        instagram_username: typing.Union[MetaOapg.properties.instagram_username, str, ],
        liked_by_count: typing.Union[MetaOapg.properties.liked_by_count, decimal.Decimal, int, ],
        live_moderation_enabled: typing.Union[MetaOapg.properties.live_moderation_enabled, bool, ],
        youtube_username: typing.Union[MetaOapg.properties.youtube_username, str, ],
        original_voice_id: typing.Union[MetaOapg.properties.original_voice_id, str, ],
        tiktok_username: typing.Union[MetaOapg.properties.tiktok_username, str, ],
        disable_at_unix: typing.Union[MetaOapg.properties.disable_at_unix, decimal.Decimal, int, ],
        labels: 'VoiceSharingResponseModelLabels',
        ban_reason: typing.Union[MetaOapg.properties.ban_reason, str, ],
        whitelisted_emails: 'VoiceSharingResponseModelWhitelistedEmails',
        name: typing.Union[MetaOapg.properties.name, str, ],
        notice_period: typing.Union[MetaOapg.properties.notice_period, decimal.Decimal, int, ],
        status: typing.Union[MetaOapg.properties.status, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'VoiceSharingResponseModel':
        return super().__new__(
            cls,
            *args,
            featured=featured,
            financial_rewards_enabled=financial_rewards_enabled,
            review_message=review_message,
            twitter_username=twitter_username,
            description=description,
            enabled_in_library=enabled_in_library,
            public_owner_id=public_owner_id,
            history_item_sample_id=history_item_sample_id,
            voice_mixing_allowed=voice_mixing_allowed,
            date_unix=date_unix,
            rate=rate,
            cloned_by_count=cloned_by_count,
            free_users_allowed=free_users_allowed,
            review_status=review_status,
            instagram_username=instagram_username,
            liked_by_count=liked_by_count,
            live_moderation_enabled=live_moderation_enabled,
            youtube_username=youtube_username,
            original_voice_id=original_voice_id,
            tiktok_username=tiktok_username,
            disable_at_unix=disable_at_unix,
            labels=labels,
            ban_reason=ban_reason,
            whitelisted_emails=whitelisted_emails,
            name=name,
            notice_period=notice_period,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )

from eleven_labs_python_sdk.model.voice_sharing_response_model_labels import VoiceSharingResponseModelLabels
from eleven_labs_python_sdk.model.voice_sharing_response_model_whitelisted_emails import VoiceSharingResponseModelWhitelistedEmails
