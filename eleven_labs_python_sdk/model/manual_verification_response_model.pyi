# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from eleven_labs_python_sdk import schemas  # noqa: F401


class ManualVerificationResponseModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "request_time_unix",
            "files",
            "extra_text",
        }
        
        class properties:
            extra_text = schemas.StrSchema
            request_time_unix = schemas.IntSchema
            
            
            class files(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ManualVerificationFileResponseModel']:
                        return ManualVerificationFileResponseModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ManualVerificationFileResponseModel'], typing.List['ManualVerificationFileResponseModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'files':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ManualVerificationFileResponseModel':
                    return super().__getitem__(i)
            __annotations__ = {
                "extra_text": extra_text,
                "request_time_unix": request_time_unix,
                "files": files,
            }
    
    request_time_unix: MetaOapg.properties.request_time_unix
    files: MetaOapg.properties.files
    extra_text: MetaOapg.properties.extra_text
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["extra_text"]) -> MetaOapg.properties.extra_text: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["request_time_unix"]) -> MetaOapg.properties.request_time_unix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["files"]) -> MetaOapg.properties.files: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["extra_text", "request_time_unix", "files", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["extra_text"]) -> MetaOapg.properties.extra_text: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["request_time_unix"]) -> MetaOapg.properties.request_time_unix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["files"]) -> MetaOapg.properties.files: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["extra_text", "request_time_unix", "files", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        request_time_unix: typing.Union[MetaOapg.properties.request_time_unix, decimal.Decimal, int, ],
        files: typing.Union[MetaOapg.properties.files, list, tuple, ],
        extra_text: typing.Union[MetaOapg.properties.extra_text, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ManualVerificationResponseModel':
        return super().__new__(
            cls,
            *args,
            request_time_unix=request_time_unix,
            files=files,
            extra_text=extra_text,
            _configuration=_configuration,
            **kwargs,
        )

from eleven_labs_python_sdk.model.manual_verification_file_response_model import ManualVerificationFileResponseModel
