# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from eleven_labs_python_sdk import schemas  # noqa: F401


class ProjectResponseModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "default_paragraph_voice_id",
            "author",
            "can_be_downloaded",
            "title",
            "default_model_id",
            "volume_normalization",
            "default_title_voice_id",
            "isbn_number",
            "project_id",
            "name",
            "state",
            "last_conversion_date_unix",
            "create_date_unix",
        }
        
        class properties:
            title = schemas.StrSchema
            project_id = schemas.StrSchema
            name = schemas.StrSchema
            create_date_unix = schemas.IntSchema
            default_title_voice_id = schemas.StrSchema
            default_paragraph_voice_id = schemas.StrSchema
            default_model_id = schemas.StrSchema
            last_conversion_date_unix = schemas.IntSchema
            can_be_downloaded = schemas.BoolSchema
            author = schemas.StrSchema
            isbn_number = schemas.StrSchema
            volume_normalization = schemas.BoolSchema
            
            
            class state(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def DEFAULT(cls):
                    return cls("default")
                
                @schemas.classproperty
                def CONVERTING(cls):
                    return cls("converting")
            __annotations__ = {
                "title": title,
                "project_id": project_id,
                "name": name,
                "create_date_unix": create_date_unix,
                "default_title_voice_id": default_title_voice_id,
                "default_paragraph_voice_id": default_paragraph_voice_id,
                "default_model_id": default_model_id,
                "last_conversion_date_unix": last_conversion_date_unix,
                "can_be_downloaded": can_be_downloaded,
                "author": author,
                "isbn_number": isbn_number,
                "volume_normalization": volume_normalization,
                "state": state,
            }
    
    default_paragraph_voice_id: MetaOapg.properties.default_paragraph_voice_id
    author: MetaOapg.properties.author
    can_be_downloaded: MetaOapg.properties.can_be_downloaded
    title: MetaOapg.properties.title
    default_model_id: MetaOapg.properties.default_model_id
    volume_normalization: MetaOapg.properties.volume_normalization
    default_title_voice_id: MetaOapg.properties.default_title_voice_id
    isbn_number: MetaOapg.properties.isbn_number
    project_id: MetaOapg.properties.project_id
    name: MetaOapg.properties.name
    state: MetaOapg.properties.state
    last_conversion_date_unix: MetaOapg.properties.last_conversion_date_unix
    create_date_unix: MetaOapg.properties.create_date_unix
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["project_id"]) -> MetaOapg.properties.project_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["create_date_unix"]) -> MetaOapg.properties.create_date_unix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default_title_voice_id"]) -> MetaOapg.properties.default_title_voice_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default_paragraph_voice_id"]) -> MetaOapg.properties.default_paragraph_voice_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default_model_id"]) -> MetaOapg.properties.default_model_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_conversion_date_unix"]) -> MetaOapg.properties.last_conversion_date_unix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["can_be_downloaded"]) -> MetaOapg.properties.can_be_downloaded: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["author"]) -> MetaOapg.properties.author: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isbn_number"]) -> MetaOapg.properties.isbn_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volume_normalization"]) -> MetaOapg.properties.volume_normalization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["state"]) -> MetaOapg.properties.state: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["title", "project_id", "name", "create_date_unix", "default_title_voice_id", "default_paragraph_voice_id", "default_model_id", "last_conversion_date_unix", "can_be_downloaded", "author", "isbn_number", "volume_normalization", "state", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["project_id"]) -> MetaOapg.properties.project_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["create_date_unix"]) -> MetaOapg.properties.create_date_unix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default_title_voice_id"]) -> MetaOapg.properties.default_title_voice_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default_paragraph_voice_id"]) -> MetaOapg.properties.default_paragraph_voice_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default_model_id"]) -> MetaOapg.properties.default_model_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_conversion_date_unix"]) -> MetaOapg.properties.last_conversion_date_unix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["can_be_downloaded"]) -> MetaOapg.properties.can_be_downloaded: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["author"]) -> MetaOapg.properties.author: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isbn_number"]) -> MetaOapg.properties.isbn_number: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volume_normalization"]) -> MetaOapg.properties.volume_normalization: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["state"]) -> MetaOapg.properties.state: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["title", "project_id", "name", "create_date_unix", "default_title_voice_id", "default_paragraph_voice_id", "default_model_id", "last_conversion_date_unix", "can_be_downloaded", "author", "isbn_number", "volume_normalization", "state", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        default_paragraph_voice_id: typing.Union[MetaOapg.properties.default_paragraph_voice_id, str, ],
        author: typing.Union[MetaOapg.properties.author, str, ],
        can_be_downloaded: typing.Union[MetaOapg.properties.can_be_downloaded, bool, ],
        title: typing.Union[MetaOapg.properties.title, str, ],
        default_model_id: typing.Union[MetaOapg.properties.default_model_id, str, ],
        volume_normalization: typing.Union[MetaOapg.properties.volume_normalization, bool, ],
        default_title_voice_id: typing.Union[MetaOapg.properties.default_title_voice_id, str, ],
        isbn_number: typing.Union[MetaOapg.properties.isbn_number, str, ],
        project_id: typing.Union[MetaOapg.properties.project_id, str, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        state: typing.Union[MetaOapg.properties.state, str, ],
        last_conversion_date_unix: typing.Union[MetaOapg.properties.last_conversion_date_unix, decimal.Decimal, int, ],
        create_date_unix: typing.Union[MetaOapg.properties.create_date_unix, decimal.Decimal, int, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProjectResponseModel':
        return super().__new__(
            cls,
            *args,
            default_paragraph_voice_id=default_paragraph_voice_id,
            author=author,
            can_be_downloaded=can_be_downloaded,
            title=title,
            default_model_id=default_model_id,
            volume_normalization=volume_normalization,
            default_title_voice_id=default_title_voice_id,
            isbn_number=isbn_number,
            project_id=project_id,
            name=name,
            state=state,
            last_conversion_date_unix=last_conversion_date_unix,
            create_date_unix=create_date_unix,
            _configuration=_configuration,
            **kwargs,
        )
