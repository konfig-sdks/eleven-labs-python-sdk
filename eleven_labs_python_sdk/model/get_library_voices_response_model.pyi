# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from eleven_labs_python_sdk import schemas  # noqa: F401


class GetLibraryVoicesResponseModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "voices",
            "has_more",
            "last_sort_id",
        }
        
        class properties:
            
            
            class voices(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['LibraryVoiceResponseModel']:
                        return LibraryVoiceResponseModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['LibraryVoiceResponseModel'], typing.List['LibraryVoiceResponseModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'voices':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'LibraryVoiceResponseModel':
                    return super().__getitem__(i)
            last_sort_id = schemas.StrSchema
            has_more = schemas.BoolSchema
            __annotations__ = {
                "voices": voices,
                "last_sort_id": last_sort_id,
                "has_more": has_more,
            }
    
    voices: MetaOapg.properties.voices
    has_more: MetaOapg.properties.has_more
    last_sort_id: MetaOapg.properties.last_sort_id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voices"]) -> MetaOapg.properties.voices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_sort_id"]) -> MetaOapg.properties.last_sort_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["has_more"]) -> MetaOapg.properties.has_more: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["voices", "last_sort_id", "has_more", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voices"]) -> MetaOapg.properties.voices: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_sort_id"]) -> MetaOapg.properties.last_sort_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["has_more"]) -> MetaOapg.properties.has_more: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["voices", "last_sort_id", "has_more", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        voices: typing.Union[MetaOapg.properties.voices, list, tuple, ],
        has_more: typing.Union[MetaOapg.properties.has_more, bool, ],
        last_sort_id: typing.Union[MetaOapg.properties.last_sort_id, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GetLibraryVoicesResponseModel':
        return super().__new__(
            cls,
            *args,
            voices=voices,
            has_more=has_more,
            last_sort_id=last_sort_id,
            _configuration=_configuration,
            **kwargs,
        )

from eleven_labs_python_sdk.model.library_voice_response_model import LibraryVoiceResponseModel
