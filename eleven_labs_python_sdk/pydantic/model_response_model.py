# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from eleven_labs_python_sdk.pydantic.language_response_model import LanguageResponseModel

class ModelResponseModel(BaseModel):
    description: str = Field(alias='description')

    model_id_: str = Field(alias='model_id')

    name: str = Field(alias='name')

    can_be_finetuned: bool = Field(alias='can_be_finetuned')

    can_do_text_to_speech: bool = Field(alias='can_do_text_to_speech')

    can_do_voice_conversion: bool = Field(alias='can_do_voice_conversion')

    can_use_style: bool = Field(alias='can_use_style')

    can_use_speaker_boost: bool = Field(alias='can_use_speaker_boost')

    serves_pro_voices: bool = Field(alias='serves_pro_voices')

    token_cost_factor: typing.Union[int, float] = Field(alias='token_cost_factor')

    requires_alpha_access: bool = Field(alias='requires_alpha_access')

    max_characters_request_free_user: int = Field(alias='max_characters_request_free_user')

    max_characters_request_subscribed_user: int = Field(alias='max_characters_request_subscribed_user')

    languages: typing.List[LanguageResponseModel] = Field(alias='languages')
    class Config:
        arbitrary_types_allowed = True
