# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from eleven_labs_python_sdk.pydantic.voice_sharing_response_model_labels import VoiceSharingResponseModelLabels
from eleven_labs_python_sdk.pydantic.voice_sharing_response_model_whitelisted_emails import VoiceSharingResponseModelWhitelistedEmails

class VoiceSharingResponseModel(BaseModel):
    description: str = Field(alias='description')

    status: Literal["enabled", "disabled", "copied", "copied_disabled"] = Field(alias='status')

    history_item_sample_id: str = Field(alias='history_item_sample_id')

    date_unix: int = Field(alias='date_unix')

    whitelisted_emails: VoiceSharingResponseModelWhitelistedEmails = Field(alias='whitelisted_emails')

    public_owner_id: str = Field(alias='public_owner_id')

    original_voice_id: str = Field(alias='original_voice_id')

    financial_rewards_enabled: bool = Field(alias='financial_rewards_enabled')

    free_users_allowed: bool = Field(alias='free_users_allowed')

    live_moderation_enabled: bool = Field(alias='live_moderation_enabled')

    rate: typing.Union[int, float] = Field(alias='rate')

    notice_period: int = Field(alias='notice_period')

    disable_at_unix: int = Field(alias='disable_at_unix')

    voice_mixing_allowed: bool = Field(alias='voice_mixing_allowed')

    instagram_username: str = Field(alias='instagram_username')

    twitter_username: str = Field(alias='twitter_username')

    youtube_username: str = Field(alias='youtube_username')

    tiktok_username: str = Field(alias='tiktok_username')

    featured: bool = Field(alias='featured')

    ban_reason: str = Field(alias='ban_reason')

    liked_by_count: int = Field(alias='liked_by_count')

    cloned_by_count: int = Field(alias='cloned_by_count')

    name: str = Field(alias='name')

    labels: VoiceSharingResponseModelLabels = Field(alias='labels')

    review_status: Literal["not_requested", "pending", "declined", "allowed", "allowed_with_changes"] = Field(alias='review_status')

    review_message: str = Field(alias='review_message')

    enabled_in_library: bool = Field(alias='enabled_in_library')
    class Config:
        arbitrary_types_allowed = True
