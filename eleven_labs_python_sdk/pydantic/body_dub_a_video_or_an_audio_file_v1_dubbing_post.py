# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class BodyDubAVideoOrAnAudioFileV1DubbingPost(BaseModel):
    # Target language.
    target_lang: str = Field(alias='target_lang')

    # automatic or manual.
    mode: typing.Optional[str] = Field(None, alias='mode')

    # One or more audio files to clone the voice from
    file: typing.Optional[typing.IO] = Field(None, alias='file')

    # CSV file containing transcription/translation metadata
    csv_file: typing.Optional[typing.IO] = Field(None, alias='csv_file')

    # For use only with csv input
    foreground_audio_file: typing.Optional[typing.IO] = Field(None, alias='foreground_audio_file')

    # For use only with csv input
    background_audio_file: typing.Optional[typing.IO] = Field(None, alias='background_audio_file')

    # Name of the dubbing project.
    name: typing.Optional[str] = Field(None, alias='name')

    # URL of the source video/audio file.
    source_url: typing.Optional[str] = Field(None, alias='source_url')

    # Source language.
    source_lang: typing.Optional[str] = Field(None, alias='source_lang')

    # Number of speakers to use for the dubbing.
    num_speakers: typing.Optional[int] = Field(None, alias='num_speakers')

    # Whether to apply watermark to the output video.
    watermark: typing.Optional[bool] = Field(None, alias='watermark')

    # Start time of the source video/audio file.
    start_time: typing.Optional[int] = Field(None, alias='start_time')

    # End time of the source video/audio file.
    end_time: typing.Optional[int] = Field(None, alias='end_time')

    # Whether to use the highest resolution available.
    highest_resolution: typing.Optional[bool] = Field(None, alias='highest_resolution')

    # Whether to prepare dub for edits in dubbing studio.
    dubbing_studio: typing.Optional[bool] = Field(None, alias='dubbing_studio')
    class Config:
        arbitrary_types_allowed = True
