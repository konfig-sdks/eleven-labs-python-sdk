# coding: utf-8

"""
    ElevenLabs API Documentation

    This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from eleven_labs_python_sdk.pydantic.body_add_project_v1_projects_add_post_pronunciation_dictionary_locators import BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators

class BodyAddProjectV1ProjectsAddPost(BaseModel):
    # The name of the project, used for identification only.
    name: str = Field(alias='name')

    # The voice_id that corresponds to the default voice used for new titles.
    default_title_voice_id: str = Field(alias='default_title_voice_id')

    # The voice_id that corresponds to the default voice used for new paragraphs.
    default_paragraph_voice_id: str = Field(alias='default_paragraph_voice_id')

    # The model_id of the model to be used for this project, you can query GET https://api.elevenlabs.io/v1/models to list all available models.
    default_model_id: str = Field(alias='default_model_id')

    pronunciation_dictionary_locators: BodyAddProjectV1ProjectsAddPostPronunciationDictionaryLocators = Field(alias='pronunciation_dictionary_locators')

    # An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.
    title: typing.Optional[str] = Field(None, alias='title')

    # An optional URL from which we will extract content to initialize the project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the project as blank.
    from_url: typing.Optional[str] = Field(None, alias='from_url')

    # An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the project as blank.
    from_document: typing.Optional[typing.IO] = Field(None, alias='from_document')

    # Output quality of the generated audio. Must be one of: standard - standard output format, 128kbps with 44.1kHz sample rate. high - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the character cost by 20%. ultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the character cost by 50%. 
    quality_preset: typing.Optional[str] = Field(None, alias='quality_preset')

    # An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.
    author: typing.Optional[str] = Field(None, alias='author')

    # An optional ISBN number of the project you want to create, this will be added as metadata to the mp3 file on project / chapter download.
    isbn_number: typing.Optional[str] = Field(None, alias='isbn_number')

    # [Deprecated] When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements
    acx_volume_normalization: typing.Optional[bool] = Field(None, alias='acx_volume_normalization')

    # When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements
    volume_normalization: typing.Optional[bool] = Field(None, alias='volume_normalization')

    # A url that will be called by our service when the project is converted with a json containing the status of the conversion
    callback_url: typing.Optional[str] = Field(None, alias='callback_url')
    class Config:
        arbitrary_types_allowed = True
